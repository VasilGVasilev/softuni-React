About Keys and Lists
    React vDOM is optimises the DOM very efficiently and if
    we attach <li>s to a <ul> using a for loop, when vDOM transfer
    info to DOM, it will lose this capability of specific update,
    no entire re-render.
    That is why we use keys that React uses to map elements/nodes onto
    the vDOM and if necessary update just the specific <li> via its
    specific key.

    
    React understands arrays, even if we did not have <li>s, React will understand 
    the array made via .map() and render it as a list

    each key is has to be unique but just in comparison to other siblings in list


catch undefined
    // useState(props.start || 0) to catch if props is undefined
typical toggle
    // setHighlighted(state => !state)


useEffect():
    How long the component is attached to the DOM:
        in class -> lifecycle methods
        in function -> hooks: useEffect()

    Example: when we have to render a component, we want the data that comes via this
        component's useEffect() to be rendered within that very component
